game built native mac apple silicon going great software need little time end user relies software ported natively apple silicon macos big sur include new version emulation software rosetta 2 provides compatibility existing mac software rosetta 2 amazing technology written ground apple socs allowing existing intel apps run seamlessly alongside native apps able take intel executables translate native arm instruction rosetta use number advanced technique binary run fast even emulation especially true metal rosetta produce native goal gpus built apple socs even game execute incredible performance another major technology ahead time compilation nearly application translated even launched use macos package app store distribute software rosetta translate application background install others translated first launch dynamically load code jits like javascripts code translated ﬂy code generated optimized apple silicon tuned performance cpu completely integrated rosetta macos big sur need special setup system call executed translated native call kernal rosetta also secure cache integrated system code signing bound specific machine o version including rosetta macos big sur transitional technology give time complete support mac apple silicon pace let dig technology quick demo starting xcode running mac apple silicon selected run rosetta xcode build app way would intel mac launch rosetta need configure special debug mode work environment real enhancement rosetta 2 using app able interact expect hit break point familiar tool development including debugging static analysis testing available even use memory graph debugger browse object let load memory graph take moment work like would expect xcode build run app rosetta apple silicon let look rosetta running apps starting app transmit running rosetta going connect onedrive download drone footage taken emulated version macos framework running alongside emulation apps process going simply download file rosetta running special container file system network access like app okay let take closer look apps saw earlier state union starting dirt rally really show u great feature rosetta translation cache built install mac app store completely transparently mean glitch due need translate new block code really important game motion audio requirement thing work even game controller really need able stay road cpu instruction translated accurately whereas graphic command sent native gpu simply frame drop lag control amazing okay let look pro app aﬃnity photo really help show emulation little memory overhead got huge pixel image loaded additional memory overhead large file open rosetta translation cache filed backed like original executable little additional overhead focus speed translation translation cache also secure thanks code signature checked execution like original binary saving file operation optimized storage stack emulation add copy buffering coupled native metal able apply effect quickly save fast rosetta 2 wickedly fast transparent user completely integrated macos big sur great transitional technology give time migrate apps support mac apple silicon code apps example app extension built universal binary since extension run process host app rosetta even emulate extension used native host app end user rely extension continue working mac apple silicon work porting run natively standard plug architecture audio unit run process rosetta 2 driver utilizing driverkit api introduced macos catalina situation ship driver example usb peripheral yet adopted driverkit great time make change way create universal driver support mac continue shrink surface area kernal extension replacing safer apis going forward continue support running kernal extension macos ca run emulation increased security offer apple soc require kexts notarized driver kit offer much better alternative le friction end user highly recommend adopt situation possible one area worked removing kernal extension usage virtualization product mac world best developer platform many developer workﬂows require using tool different platform performing server deployment meet need many spin virtual machine running different operating system lightweight container like docker know critical work important support need working hard partner support virtual machine mac apple silicon saw keynote started working parallel want walk early port parallel desktop mac running apple hypervisor updated apple silicon running prototype mac apple silicon support virtualization fully featured arm version debian linux running parallel desktop remember require kernel extension installed installed swift linux started new project vapor ali ozerswift web framework may familiar let go ahead build new project start server go ahead load page server firefox linux like able test safari macos webmin installed help manage machine apache configured proxy port 80 vm local vapor server let start go safari macos see look look great environment interact due feature built macos big sur thanks hypervisor framework complete support networking storage input device much virtualization technology used container solution docker know incredibly important many common service site development testing working docker enable coming month mentioned transition put apple platform common architecture one coolest benefit ability run software originally built iphone ipad completely unmodified let take look work may guessed technology enables running iphone ipad apps mac apple silicon technology enables mac catalyst effect catalyst implementation io framework macos apis made mac framework running mac apple silicon even binary compatible make possible run many iphone ipad apps without kind change unmodified io apps however get customizations catalyst apps offer particular worth pointing running unmodified apps possible mac apple silicon intel based mac may want check catalyst box xcode start making app even better mac user planning make unmodified iphone ipad apps available mac app store launch mac apple silicon fact apps user purchased iphone ipad eligible run mac simply show purchased mac app store well developer total control whether wish participate believe great addition mac user apps already offer native mac version let look ipad game monument valley app exact available io app store launch app appears dock like mac app minimize window menu bar important part mac experience io apps get menu bar generated automatically instance edit menu usual entry app menu well notice preference put preference panel automatically created apps io setting bundle also high even quit thing mac let hide apps get back game beautiful graphic mouse click mapped tap zoom expected click drag rotate create path character game fully playable application mac application folder default user rename move desktop say wish io apps installed launched system container used pad arbitrarily modified achieve user expectation also remaining compatible apps play couple trick first new app bundle format wrap application allows user visible app freely renamed moved second ensure apps launched compatibly possible use future introduced macos sierra called app translocation allows io app eﬃciently launched sanitized path affected user action let look different type app document readdle monument valley example nice pure gaming experience document productivity tool us number advanced io feature good example come across mac instance application support ipad multitasking mean window mac automatically resizable even go full screen see macos scrollers scroll two finger trackpad app automatically adjust macos appearance dark back light since app support multiple window ipad also mac within app access resource mac photo library accessing file brings native macos open panel example pdf file io apps also automatically make use macos shared service ability bring mac mail composed share sheet emailing content want show one thing extension io apps work appropriate mac let open photo choose photo edit io app installed provides photo editing extension extension automatically appears photo extension list choose enhance photo amazing using extension provided io app mac photo app look iphone ipad apps mac apple socs user love ﬂexibility run apps desktop remember developer take extra step unlock customization refinement app mac catalyst andreas wendker kristin forstermacs apple silicon represented incredibly powerful computing platform take advantage advanced chip technology offering unprecedented power per watt performance incredibly graphic speed run wealth software ranging native universal apps fully optimized apple silicon rosetta emulated apps yet ported intel mac apps environment running virtualization way unmodified iphone ipad apps looking forward opening next chapter mac seeing take next level leveraging benefit apple silicon apps let talk macos big sur beyond support apple silicon big sur huge software release go along transformative hardware change announcing release packed new capability faster ever whole new look new look feel macos big sur eliminates visual clutter user interface give mac air freshness see moment brought best designed platform together created family resemblance ipad o macos retaining power ﬂexibility mac similarity make easy user transition device making mac catalyst iphone ipad apps naturally feel home mac starting dock see main theme nacos big sur doc rounded ﬂoats bottom screen slightly dock corner echo curvature new design app icon conformed standard shape provide template design icon match control center come mac providing easy access system control notification center whole new look built completely swiftui notification widget shown simultaneously rather sequestered separate tab notification application grouped together provide content extension show custom content using notification api brought macos io made available appkit mac catalyst apps menu bar ﬂoats top desktop picture selection ﬂoats within menu refined layout menu selection echo rounded theme finder see new design document icon customize document icon simply providing image text macos automatically position element mask apply page curve sheet come new way longer rollout toolbar instead ﬂoat window rounded platter parent window dimmed reinforcing modality sheet toolbar preview window sits top content area sidebar visually distinct vertical element window automatically adopt new structure using toolbar full size content view sidebar styling mac catalyst swiftui window receive full sized content view default number major styling change toolbar taller window title vertically line toolbar control title hide document icon roll contributing streamline visuals toolbar item position right except navigation item remain leftmost toolbar designate toolbar item navigational toolbar control new large size show backing roll search field clocked centered lift toolbar space constrained expands tough full field clicked get great new behavior window app embedding search field new search toolbar item additional toolbar structure three pane layout like mail mail toolbar split two section control corresponding message list positioned pain control corresponding conversation view positioned added toolbar api appkit mac catalyst express separation swift ui toolbars attached navigation view pain get automatic separator tell toolbar gained lot new functionality already using toolbar great time start image toolbar sidebar provided via s symbol thousand s symbol available mac using widely s symbol configured perfectly match size weight text sidebar symbol seamlessly adapt provide correctly sized styled image change sidebar icon size control brand new look well shown system preference pop radio button slider progress indicator control also updated fresh new look really embracing color release given application mechanism define app specific accent color providing color name effect sidebar icon also selection color color standard control mail us blue accent color got even color theme giving apps way assign color individual sidebar item delineate functionality mail side bar vip item coated yellow smart mailbox monochrome local mailbox till combination color tinting shape s symbol contributes great sidebar design note another example app specific accent color yellow branding note come alive list selection text highlighting hope enjoy choosing accident color apps express unique andreas wendkerpersonality tell every little detail mac made fresh modern many opportunity application participate big sur feel really fantastic mac catalyst apps also look better ever continue improve technology every release continue prove implementation apps making available catalyst basically mac specific implementation io apis notably uikit course recommend swiftui appkit want take full advantage mac capability technology make easy bring ipad o apps mac single shared code base support iphones ipads mac year making number improvement make experience catalyst apps even better feature require small amount adoption work part get even better result mac importantly new mac idiom allows run apps native resolution mac instead using default scaled user interface match ipad size mac idiom put total control user interface control draw better match rest apps mac even closely also bring apis set supported catalyst apis provide even better compatibility io allow make lightweight customizations code adopt apps running inside macos mac using critical system apps like message written catalyst give mac message parity io counterpart let take look new version message everything want mac app rich menu key equivalent multiple window take advantage large mac display popover give quick access detail integrated find help navigate communicate eﬃciently catalyst get familiar experience mac io use new addition like pinned conversation inline reply mention along existing favorite memoji message effect next version swift playground planning ship later year also shine new mac idiom fully take advantage new mac look feel simplified toolbar full height sidebar adjustable tech size streamlined editing pop over mac system picker like message swift playground support multiple window make feel right home large screen mac io developer yet considered creating mac catalyst app fantastic time big sur starting transition apple silicon packed new feature includes much improved catalyst top great new look incredibly much changed release big sur huge step forward mac fact josh safferso much general architecture improved giving macos new number big sur next macos version 11 really new mac operating system around exciting year mac never better time mac developer hope excited deep change making future open platform next let talk great improvement bringing ipad o already huge year ipad month ago added trackpad support alongside new magic keyboard continuing ipad evolution powerful platform future computing short year ago ipad o gained support dragon drop familiar interaction completely experience next came enhanced multitasking capability including ability open multiple window favorite apps year taking ipads capability even new way navigate interact apps designed ipad brought new idea apps across ipad o course added new apis bring apps well let look example including brand new side bar new picker streamline data entry new opportunity refine interaction apps let get started side bar new sidebar support standard layout like today swipe expand layout every size ipad view even available portrait orientation making easier ever browse organized content even smaller screen adding sidebar app easy new functionality available existing component already use sidebar also simplify navigation app like photo includes rose library album previously found tab bar along bottom also rose like favorite place used nested bringing key part app one place sidebar make apps deeper functionality much easier access also help organization support displaying hierarchical content outline including collapsible item new outline build api already familiar swiftui uikit enhanced support new appearance behavior really easy add sidebar perfectly match apps system help app take even better advantage ipad large screen also sebastien great opportunity improve data entry apps added number new picker like brand new date picker let choose date finding calendar support inline style make great use ipad screen realistic need fit smaller footprint also compact style also new line emoji picker invoked keyboard shortcut macos ipad apps get free also find new color picker api brings standard way pick color across apps really easy adopt provides app standard behavior like place save favorite color later use eyedropper pick color right screen use new ipad o apps notice even refinement make interacting ﬂuid ever great opportunity enhance apps similar way example new lightweight context menu great way organize common action converted interaction previously used action sheet new menu think going love much everything discussed designed ipad choose mac catalyst bring mac new apis also designed look great macos look deeper find many refined interaction individual apps like new line rename file change small add much powerful ipad experience finding opportunity apps easy look way make deeper functionality discoverable streamline navigation remove modal state sure find opportunity apps well enhancement made apps across ipad o hopefully give idea make apps powerful always exciting software alone let also explore incorporate ipad hardware capability enhance apps ipad capability extended even powerful hardware accessory earlier year announced new ipad pro come equipped lidar scanner lidar scanner give ipad pro incredibly precise measuring distance pave way developer build entirely new experience lidar scanner us direct time ﬂight project light onto object five meter away light reﬂected back custom designed sensor measuring long process take obtain precise distance measurement surroundings access information apis arkit first seen geometry provides 3d mesh scene also use neural network identify plane surface scene like ﬂoors wall door window new depth api give access precise distance information captured lidar scanner see 3d depth map created using output depth api combined apis bring new level realism ar experience ipad pro virtual object placed instantly motion capture people occlusion dramatically improved measurement captured lidar scanner virtual object accurately placed front behind item world brings whole new level realism ar experience lidar scanner also unlocks new capability professional apps like shaper 3d quickly scan user room generate 3d map surroundings also used entirely new apps leverage ipad pro precise understanding physical world like built industrial maintenance design manufacturing making ipad pro powerful tool manufacturer architect creative professional another creative way extend capability ipad apple pencil apple pencil amazing tool turn ipad powerful drawing note taking device year added great new capability make handwriting ipad easy powerful type text many improvement automatically work app without additional work let take look pencil awesome new capability action sample app built help student practice handwriting skill great apple pencil let work free form way start writing anywhere writing pencil work standard ui text field added ui text field student write name top assignment new ipad o text field automatically support scribble mean hand written word automatically converted tight text let get started assignment notice soon pencil picked beautiful drawing tool appear drawing canvas app user pencil kit beautiful tool provided automatically new pencilkit make handwriting powerful type text select hand written text using exact gesture would type text also added new gesture called drag select allows select sweeping pencil entire paragraph align even single letter make copying handwritten note snap sneaky way get assignment quickly hood drawing pencil us new canvas api new capability added directly pencilkit already using ipad app inherit great new feature free includes color picker make apps homework little fun one biggest request pencilkit ability get stroke data pencil moving across screen happy say capability available pencilkit using new stroke api get access important attribute drawing like angle pressure drawing ink exact location grouped stroke updated user draw capability perfect handwriting app let practice student improves handwriting tracing letter easy write app simply use pencilkit show pencil moving across intended line also added comparison logic app choose let student know quite tracing letter closely help practice app built pencil thanks new drawing policy api scrolling finger still consistent rest system ipad o let identify separate area free form drawing others text entry specifies apply scribble see new update ipad o pencilkit make handwriting powerful type text scribble offer seamless writing experience app text field new stroke api delivers real time drawing information enabling pencil kit apps offer new experience like annotation markup recognition amazing new feature continue push possible ipad ca wait show exciting new ipad feature week see customize apps ipad course ipad apps also benefit great feature coming io 14 let dive io 14 awesome update jam packed new feature transform apps two exciting developer feature io 14 widget app clip designed extend apps experience delight user first let talk widget widget always great way convey information glance io 14 completely experience creating new widget take designed next level use device intelligence show user right information right time beautiful data rich come three size new widget available today view first time making available home screen user get glance information apps whenever go home space user visit many time day new widget written swiftui making easy share code across iphone ipad mac new widget work seamlessly across three platform displaying widget home screen mean always visible always running performance memory eﬃciency really matter previous approach using live running extension could deliver eﬃciency home screen requires solve new widget leverage swiftuis ability describe widget appearance separate rendered added new method serialize swiftui view archive archive light weight rendered asynchronous gpu ensure great performance home screen new widget api widget kit structured around timeline entry contains one new eﬃcient swift ui archive well time date relevant score time line entry rendered demand timely visible user widget becomes visible eﬃciently construct render full view higher key archive without needing run apps code typically provides multiple timeline entry process repeated throughout day without requiring app constantly running widget user configured provides set timeline entry system render right time help optimize use space home screen user stack widget stack come size user easily ﬂip widget part stack taking idea even smart stack using device intelligence io surface right widget top stack adjust right time relevant score provide widget timeline entry come play signal system something high interest happening news alert weather warning thanks swiftui created eﬃcient intelligent widget experience unique every user like show demo dive xcode let show easy lay widget home screen already customized home screen favorite widget notice weather everyone favorite topic conversation emoji ranger widget show panda character online multiplayer game figure widget widget gallery view widget gallery entry created code system know display timeline entry writing disc time render ui technology allows u create gallery user technology also allows u create smart stack user ﬂip addition system intelligently analyze time line entry widget stack went service relevant information user example system know relevant calendar event coming stacking intelligently rotate widget widget beautifully organized home screen widget actually created team built widget see character status game let dive xcode show created emoji ranger widget io game define widget widgetkit extension define widget need conform widget protocol conforming darin adlerwidget protocol return widget configuration system consists kind widget timeline provider created single entry return using snapshot function snapshot used system want display single entry also created series entry timeline function tell system display individual entry based date defined really engine widget need find widget return timeline tell system surface widget defined relevant score multiple timeline entry relevant score provide weighed relevant score provided system dynamically display entry relevant user widget currently showing character game really want see player competing widgetkit provides lightweight configuration ability leveraging intense framework developer simply pas parameter configured framework provides configuration ui team already started build see using intense timeline provider generate new timeline based intense value really answer question asking let choose character see widget enter edit mode edit widget brings configuration ui ui created system lift finger create view using power intense system dynamically create ui behalf ca even select teammate character view status widget define widget easily customizable read system intelligently surface relevant information app amazing possibility widgetkit next let look exciting feature io 14 also introducing app clip app clip small part app light fast easy discover user quickly get within need right need everything app clip designed speed let start card quickly pop auto generated apple metadata submitted app store user find familiar safe soon see card behind scene app clip already downloading tap could launch app clip need enter credit card number app clip use apple pay payment manually log account could take advantage sign apple app clip wo clutter home screen stay around long need easily launch recently used app clip new app library discovery key app clip getting part app moment need critical made really easy discover able open apps use every day place real world user see new apple designed app clip code know app clip waiting great thing app clip developer made part app use full power sdk make clip small possible user app instantly leave analytics library really need wo even close 10 megabit limit app clip present notification within eight hour opening one like reminding part spot expire even app click specific api let verify app clip launched exactly expect app clip best way introduce user full app offer made really easy upgrade prompt user get full version app time make sense app clip great seamlessly migrate choice made full app part upgrade fruta app fruta let see menu delicious smoothy place order explore smoothie recipe placing order work invoking fruta right url let make app clip ordering experience first xcode choose new target choose app clip create new app clip target next select class asset catalog needed ordering add app clip target membership let build run great app clip preserve apps ordering experience notice app clip ask permission send notification customer order complete streamline using notification permission exclusive app clip designed light fast experience add check app clip permission wo request authorization user wo prompted also want configure store kit overlay let user get app order ready perfect time present along explanation get full app customer streamlined experience app clip done ordering get app take recipe home app clip immediately discoverable variety way built small part apps launch fast feature like signing apple apple pay user privacy built right fact privacy incredibly important user newest product making easier give user transparency control respect data lori declare privacy information apps right product page app store simply go app store connect answer question collect share protect user data highlight presented potential user right app store across platform new technology take advantage io 14 last year big year apple watch developer watch o 6 introduced independent apps app store apple watch course first ever native ui framework watchos swiftui watch o 7 giving new place user swiftui skill swift ui view swiftui complication giving space face letting create multiple complication family incredible ﬂexibility provide beautiful timely information user raise wrist also making easier ever get app information complication user hand watch face sharing integrates app store purchase download right sharing ﬂow let show cool new feature app working help friend hawaii track hump back whale visit spring live vicariously since travel pretty restricted right whale watch app see recent whale sighting several viewing station around maui also submit sighting happen spot pod like make easier see happening whale friend long sighting right watch face super easy describe complication creating family support first offer complication display data recent sighting various viewing station around island similar world clock offer complication city selected app looping list station creating complication descriptor one see complication us station name unique identifier make possible complication navigate different part app example station specific complication go detail screen viewing station next create complication quickly logging whale sighting use unique identifier navigate directly screen logging sighting user tap also use provide different template complication station specific one supporting family finally create third descriptor season data complication complication supporting family one complex make sense large rectangular space matthew firliki finish calling handler descriptor array sorter order want complication appear user edits watch face mentioned watch o 7 support swiftui complication great option new native apis gauge progress fuse repurposing swiftui view app already got chart recent whale sighting across island app use see easy wrapping swiftui view one new view template using version chart view font size adjusted bit populating data past week nice adjustable amount data watch face see everything look use favorite new feature xcode 12 complication previous may noticed handling different complication family giant switched statement see complication look like different watch size tinted writing bit swiftui course previous update live like complication look adjust code see impact moving watch see complication built would appear user customize complication selection create canonical whale watch face sharing friend share phone bundle app post social medium think island friend testing apps would appreciate face includes favorite water sport along whale watch complication make quick face surfing paddle boarding complication sighting data whale watch station closest favorite beach log sighting complication case spot part whale well board get text preview watch face tap offered opportunity get app already app store add face face automatically selected default face sneak preview multiple complication swiftui complication face sharing excited new tool capability watch o 7 help customer connect information matter customer share awesome face apps seen overview important change operating system best way take advantage new functionality get new version xcode developer tool first thing notice xcode 12 really show feel macos big sur cleaner expressive ui modernized toolbar put control right need icon fresh new appearance font size navigator match system sidebar setting adjust size separately get look like document show toolbar inspector updated new spacing layout xcode 12 really gorgeous get simple clean layout quickly example maximize workspace code going full screen use slide sidebar quickly access file even perform search move throughout project something really excited show document tab document tab appear familiar space across top editor great way organize work use dynamic tab shown italic navigation file select navigator open tab find file want keep open double click hold option click open new tab work great action like jumped definition open quickly also open kind content tab commit view branch working built lock might want reference later tab let easily manage set content want work also use many tab example adding test class already use file menu split editor drag group test tab bar work file done working close closing split document tab build xcode fast frontier xcode 12 support new feature apis latest stks providing great way develop apple platform xcodes knew swiftui app template include everything need create common code share across platform tailor ui idiom group target created automatically new project help keep good layering project grows keeping app working great platform requires testing xcode 12 make achieving broad coverage even easier test factored reusable function navigate nested call would debugging find source problem test also evaluate responsiveness ui working animation ui test specify velocity use scroll press performance test capture diagnostic information review detail animation duration frame rate even number ui hedge occurred biggest addition testing storekit new storekit test framework let specify app purchase subscription information right project test without needing stage deploy app working storekit interactive xcode new storekit transaction manager show detail app debugging current session running simulator select item buy confirm purchase review transaction xcode even refund app update live developing apps storekit almost much fun purchasing item josh safferof course creating app way fun testing made working swift swiftui even awesome source editor preview especially using swiftui preview new toolbar across top speed common action duplicate preview use inspector change appearance dark make working preview like designing ui control quickly edit view double clicking preview scroll matching code view smartly selects content change adding modifier faster inspector recommends modifier based selection join top list search modifier find one need code completion swift feel totally new result come back 12 time faster simplified presentation make easy find looking particularly amongst similar result code completion go way beyond helping type help get want place whereas get library compile additional input appear completion result mean make quick addition customize later keeping code preview compiling whole time along tool helping enhance ui uis enhance tool view modifier project appear library default content implementing protocol swift package swift package support necessary component including building asset catalog resource localizing content use swift ui creates swift ui control package design preview add library little code switch back view open library find control others add ui double click customer easier ever create control use project share others lot discover xcode 12 try great user experience document apps new testing functionality storekit tonne workﬂow addition designing great apps much build top dramatic improvement made year swift swift ui last year introduction swift ui took huge step toward new way building apps started strong foundation core infrastructure component deep integration existing framework full surface mature framework like appkit uikit ca covered taking time get right prioritizing source stability making api powerful time result year swift ui api improvement completely additive code already written continue compile run year release migration required important u swift swift ui playing central role across apple ecosystem evolving together creating set apis powerful enough build everything system feature like new control center notification center macos entire feature like new widget even gone far implementing new color picker api uikit using swiftui extensive usage requires great performance language framework team worked together achieve dramatic improvement year notice faster launch layout smaller code size memory usage one important piece swiftui performance layout system many asking collection view enable high performance display large data set include one last year bigger vision wanted pursue saw opportunity support high performance collection without entirely different set apis already build complex layout like list photo swiftui today large collection expensive sample contains 20,000 photo consumes memory year release simply add word lazy existing stack view enable faster load time dramatically reduced memory usage large collection 20,000 photo sample still enable fast scrolling point list load instantly consumes far le memory complex need added new lazy grid well great example ﬂexibility come swiftui declarative syntax learn single set layout primitive use compose 10 view 10,000 combined new support switch let statement expanded swift function builder syntax eﬃciently display large complex collection view focus swiftui last year enable add new view existing apps sharing code across platform supported deep integration existing ui framework year course enhanced expanded foundation new api covering thing like outlined view paging view even began adding swiftui interface framework like mapkit avkit bigger enhancement well today talked many technology help bring existing apps new place swift swiftui know also want build brand new experience deploy everywhere also taking next big step expanding swiftui learn write anywhere story api let deliver fully native experience across apple platform starting first line code andreas wendkerswiftui includes incredibly concise way describe app structure line code support common element like window toolbars also platform specific feature like menu preference window common set app structure apis apple platform also support feature unique one mathew showed new shared app template let show make work give sense powerful let build simple document based text editor notice api designed around swift new add main feature identifies main entry point application apps use declarative structure familiar swiftui view enabling text editor entire interface expressed four line code start add document group manages creating opening file course document need view display edit content well add simple plain text editor connected model line build run already fully functional app behavior expect start typing see automatically mark document edited needing saved even get automatic support undo app fully native platform providing standard behavior like open panel macos iphone ipad get standard file browser course also easy add platform specific functionality example add preference window front macos line code let setting seen fill view created earlier composing different part app easy composing swiftui view run find preference window expect brought preference menu item automatically added right place configured appropriate key command swiftui declarative app structure provide appropriate platform native behavior like automatically like view learn new application apis apply everywhere following development philosophy starting strong foundation deep integration ui framework expanding support time next big step bringing language api build fully native experience across apple platform without compromising make platform unique using swift swift ui concludes overview important announcement apple platform developer year new release full new feature many new capability apis even time talk state union new way core ml allow encrypt machine learning model deploy via icloud tvos continues best platform big screen airplay support 4k hdr stream multiplayer support game many new enhanced functionality usual also making develop previous operating system xcode release available download developer.apple.com mac developer forget sign quick start program apply dtk apple silicon well learn even new technology unveiled today please take advantage 100 session available throughout week ca wait see going use new api technology enjoy great apps finally apple always drawn strength creativity global developer community celebrate made film comprised image shared u home continue create work inspires u thank well hope enjoy week ahead