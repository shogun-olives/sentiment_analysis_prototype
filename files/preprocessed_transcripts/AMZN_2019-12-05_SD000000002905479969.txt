nice t-shirt , ( shifty ) . look . welcome , everyone , first day event . hope really good : invent . always , 's learning . 's educational experience . hope guy learned lot past day . thought 'll something different year really focus bit behind scene aws amazon , sort new feature service . one thing 've fortunate aws 've , let 's say , 13 year . 've gotten lot experience . experience allowed u innovate range behind coverage maybe 've seen new service feature launched past day . sort forget 's lot thing 're behind scene . quote jeff bezos , say sometimes innovation , want focus innovation , focus thing never change customer . , create ï¬‚ywheels benefit forever . 's easy see work retail , yes ? larger catalog mean higher likelihood find 're looking , lower pricing , better guarantee delivery . work aws ? thing never change customer ? security , performance , scale , reliability , cost eï¬ƒciency operational excellence , thing never change . anything parameter benefit forever . sale thing thing put press release , 's really thing sort innovation behind cover , , example , always make sure improve performance component system . thought today , look thing 've done aws , behind scene . little bit deep dive see kind le learned . maybe 'd like investment well . maybe could take home something . first thing would like talk virtualization virtualization sort bread butter computer part cloud environment day 1. 's one major technical underpinnings really allowed cloud computing become big . look classical virtualization , actually around quite long time . '60s , major mainframe worked already virtualization . way see virtualization today , basically , x86 virtualization , really came life major research stanford cambridge . one stanford resulted vmware . made use binary rewriting trap privileged instruction hypervisor . xen took different approach . xen actually modified operating system make sure trapped hypervisor execute privileged instruction . look sort basis virtualization , yes , 've really pushed boundary virtualization time . something today 's virtualization called root i/o virtualization text ; 's basically , guest os , fighting i/o resource . especially , see network . look sort virtualization really scaled , would see customer -- guest os would see significant data variation latency network , mostly fighting network device . , started think radically change think sort rethinking virtualization actually create base innovation customer . also fact newer kind architecture , really hampered old style virtualization . basically , really wanted give customer performance almost bare metal , would possible . saw additional virtualization , significant overhead . really wanted build modular system , least 's thing amazon . 're really thinking sort taking lesson we've learned software actually apply hardware world virtualization world well . basically , see traditional virtualization world monolith , yes , hardware component actually managed hypervisor . well , actually take lesson micro service , small building block , really quickly innovate supply hardware world well , maybe chase world virtualization well . think sort , create world device . api . api may hardware api like pci bus . 's still hardware -- 's still api reach hardware . let 's take look sort different step 've taken sort evolution nitro system . let start really traditional virtualization . 'm really thinking first problem tried solve network . basically , transferring , let 's say , 8 gigabit file sv , would result literally hundred thousand kernel trap . really wanted see whether could actually solve particular problem . , actually moved network component onto separate card . really first version . actually saw c3 instance launched 2013. 's -- really learnt lot actually oï¬ „ oading i/o onto separate card . took u actually another two year really become much familiar would take actually oï¬ „ oad processing onto separate card sit server . step 2 , actually c4 architecture , started working annapurna lab actually move eb processing separate card . longer -- sort volume processing network happening main cpu . success nitro card c4 annapurna lab actually joined aws . started working c5 , major jump could also i/o server , would , say , oï¬ „ oad i/o onto separate card . next step really start thinking actually remove piece hypervisor move control plane separate card . became complete nitro system . 's nitro controller management also built new hypervisor absolutely really minimized . . first one x1s actually really became first much faster , much better performance much secure could ever done . let 's take look sort work , interact . basically , would create volume , eb volume , would volume attach . would actually talk eb control plane , talk eb card nitro - - nitro system actually make nvme device , notifies pci bus hypervisor trap actually mount volume guest arrest . 've quite successful . look sort pre nitro hypervisor . sort typical jitter would seeing interact eb device . 've oï¬ „ oaded onto nitro . basically , jitter disappeared . allowed u double iop eb , increase throughput tremendously hear earlier : invent year , eb optimized bandwidth , 's actually increased 40 gigabit per second 19 gigabit per second . networking eb , really important actually customer . look processing , happened processor ? -- david brown earlier week talked customer requirement 150 microsecond processing time . look c4 , nitro hypervisor introduced , see customer trouble actually meeting processing capability . asked customer actually try thing c5 . see , c5 performance almost close bare metal . purely hypervisor thin longer way guest o get performance want . go storage latency . yes . ic already beast term storage . see introduction nitro , p50 well end performance spectrum , 's rock solid performance . increased almost much 4x . look network optimized instance 've created , one n back instance name . went peter desantis ' talk monday night , saw additional board 've created give 100-gig network . , performance increased 4x . 's looking improving performance . 've actually oï¬ „ oading lot onto separate card , also could improve security , trust one : kill dom0 , yes ? remember dom0 old style virtualization complete linux instance . basically , could log memory dump . big security risk , yes ? , actually removing dom0 , also remove ssh access device , , create much secure environment . oh , thank . would give detail actually , like -- important part whole nitro security design . basically , control communication ï¬‚ow . happen nitro controller talk hypervisor . 's allowed communication . hypervisor allowed communicate back . hypervisor take action control -- actually access nitro controller , know system compromised isolate start investigating . go -- external control plane , whether ec2 eb , allowed communicate nitro controller , like saw earlier eb example . nitro controller , however , allowed take action . nitro controller actually start actively going network , know system compromised isolate . unique communication design allows u build extremely secure system , yes ? really need able , eye , trusted computing untrusted world . , 've created 2 trusted part , nitro system . nitro system also sits complete trusted network . component actually talk . another thing able actually add encryption . know 've always big fan , actually . encrypt everything . nitro , able encrypt everything . encrypt communication nitro card default . everything encrypted default nitro , yes . thing go network . also , local disk encrypted default performance implication . see , way , there's actually improved security significantly . ca n't even trust host guest , yes ? make sure guest longer , moment , actually anything hardware machine allow . one thing , example , absolutely allow modify nonvolatile memory machine . also machine boot actually cryptographically check component machine ensure never compromised sense otherwise , isolate machine actually start investigate . cool thing nitro became base innovation . could thing could never . example , could live update . could start patching operating system . could start patching hypervisor nitro card , without anything taking . could add new hypervisors . could also start running bare metal . could also create outpost . thing enabled fact created platform called nitro control computer environment . also another innovation asked , actually protect sensitive data ? number customer -- , course , ec2 used lot highly-sensitive processing . customer asked u , something u , yes ? -- innovation ? given 're nitro , could unique thing . earlier week , announced nitro enclave , allows cordon little piece memory memory golden enclave . enclave , run code code continuously checked cryptographically correct , making sure code never compromised . enclave also access network disk . , parent instance , actually communicate free ( sox ) secure channel . allows quite customer even higher control sensitive data . look sort nitro-related innovation , figure started , yes ? 've able increase release 4x number instance clare liguoriafter , induced nitro . really game changer . really changed way think compute environment control compute environment . also allowed u go stack think sort , find support -- vms . find support container server . , introduced micro vm called firecracker . , tell u firecracker fargate clare liguori , principal software engineer aws container team . clare ? hi . 'm clare liguori . excited today take hood fargate . fargate serverless compute container . fargate , run ten million container customer every week . security # 1 priority serverless container workload . virtualization provides strong isolation boundary workload fargate , use virtualization isolate customer even isolate copy application . application fargate made one container . copy application run virtual machine hood fargate , isolating container running fargate . inside virtual machine dedicated kernel , network interface , data volume credential . ensure application isolation multiple level . 'd like show example typical application look like running hood , running isolated virtual machine . : invent trivia , online trivia game : invent 's running fargate . tuesday , announced use fargate elastic kubernetes service , eks . i'm running application using eks fargate . 'm going show happens hood fargate large traï¬ƒc spike come website . say , example , showed : invent keynote thousand people . let's first look happens run application eks without fargate , running ec2 instance . handle change traï¬ƒc , 've configured kubernetes auto scale number container , called pod kubernetes . number ec2 instance . normal traï¬ƒc , like 're seeing , i'm running pod ec2 instance . 've shown game keynote . course , traï¬ƒc going ï¬‚ood people trying game . take little kubernetes spin enough ec2 instance run pod needed handle traï¬ƒc . 're waiting instance start , 're under-provisioned , causing big latency spike . , , traï¬ƒc going start drop . kubernetes going spin pod eventually terminate ec2 instance . instant scale-down tends lag behind pod scale-down . time , 're actually over-provisioned . let 's look happens situation . running hood fargate . fargate , n't want worry enough ec2 instance run pod , 's serverless compute . fargate take care isolating pod virtual machine allocating right amount compute per pod . traï¬ƒc spike come , , new pod spinning fargate quickly allocating new virtual machine per pod hood . 's small latency spike pod start starting . 's quickly resolved 're running . using fargate , number pod react really quickly change traï¬ƒc site . kubernetes spin pod traï¬ƒc dropping n't worry over-provisioned 'm using fargate serverless compute . side-by-side , really see difference running ec2 instance running fargate . ec2 , saw ; over- provisioning . fargate , able quickly react change traï¬ƒc , fargate isolated pod virtual machine allocated right amount compute per pod . 've seen fargate scale isolates container serverless compute , let 's look virtualization technology use provide strong isolation boundary application . since fargate 's launch , we've used ec2 instance isolate application virtual machine . model , application allocated fresh ec2 instance running fargate data plane . traditional virtual machine pretty heavy weight use isolating container . traditional virtual machine tend present lot interface device container simply n't care . small example , traditional vm typically present video card reserve least 4 megabyte memory graphic . container almost never graphical environment . really small , small 256 megabyte fargate . wasted resource using traditional vms isolate container . fargate provides better eï¬ƒciency isolating container . fargate purpose-built isolating container function virtual machine called microvms . microvms provide level isolation traditional vm . 're fast lightweight . n't device n't need ; device model implement device actually needed container function . video card inside microvm reserving 4 megabyte memory like traditional vm . fact , microvm requires le 5 megabyte overhead total . 's highly eï¬ƒcient use isolating container . 've really excited see open-source project like weaveworks/ignite kata container leveraging firecracker provide fast , eï¬ƒcient isolation project . firecracker-based isolation , fargate application allocated fresh firecracker microvm instead fresh ec2 instance . microvms look pretty similar ec2 instance showed already . look inside . 's difference application container running inside . werner vogelshave component like fargate data plane . firecracker , we're able achieve better eï¬ƒciency compared traditional vms . pack many microvms onto single nitro bare metal instance microvm running isolated fargate application . run fargate firecracker , high density mean better eï¬ƒciency fargate . want share bit 're working hood fargate . 're optimizing fit firecracker fargate . originally ran fargate data plane inside microvm like ec2 instance . 's longer optimal high scale high density nitro bare metal . 've redesigned fargate data plane ground unique need serverless container compute . new data plane 's development designed run directly nitro bare metal instance , manages microvms container workload inside . container running inside microvms actually start faster model n't wait component start microvm like fargate data plane . 're developing core component new fargate data plane open github , firecracker containerd project . firecracker containerd make simpler use firecracker isolate container . enables using open source project containerd manage firecracker microvms . minimizes overhead required isolating container microvms . expose container image block device microvm . check firecracker-containerd github little sneak peek future part fargate hood . thank . much . thanks , clare . 's -- , course , fortunate microvms also allow u run lambda . think looked -- watch . 've seen lambda improve past year , 've done past , week , month releasing , really cool stuff . think given many rely vpc boundary , 're able actually really reduce start-up latency vpc boundary -- vpc boundary . look sort new concurrency scaling 've released component , proficient concurrency , get really good control start-up time quite piece . thing lambda well fargate , also want serverless technology first adopted , let 's say , young technology company . turn , 's case . rapid adoption serverless happening enterprise , mostly really pay execution time . management much simpler . , enterprise adopting serverless tremendous speed . jeffrey dowdsand 'd like introduce jeffrey dowds , executive vanguard share making use technology completely revamp vanguard . jeffrey ? good morning . 'm thrilled represent vanguard today . 'm excited share vanguard 's journey cloud . vanguard , core purpose take stand investor treat fairly give best chance investment success . let introduce firm . 're global asset manager . 30 million investor . entrust u $ 5.7 trillion asset . offer 450 investment product . 17,000 crew , 's refer employee . physical branch . 're digital firm ; 90 % client interaction come digital channel . 40 year lowering cost invest . importantly , industry best client satisfaction result . perspective , 're big 're complicated . global data center , mainframe , thousand server , lot storage , thousand apps , 50,000 endpoint , 5,000 technical staff . business , downtime tolerable . 60 year ago , vanguard 's senior leader set transformation . knew vanguard going stay competitive digital age , needed better business . wanted accelerate pace innovation . wanted deliver business value start-up speed , continuous delivery , devops , microservices , cloud , new way working , ci/cd , concept play . knew cloud cornerstone going fast . knew linchpin success . set private cloud journey since concern public cloud security . one year journey , back 2015 , sent 3 cloud architect : invent . upon return , knew could compete cloud-based service delivered aws . also knew building private cloud going take long expensive . quick huddle ciso senior leader , pivoted public cloud . selected aws cloud provider . public cloud destination , quickly formed cloud construction team , many audience today . thanks , guy . full stack structure . outcome-oriented mission . importantly , aligned goal . big firm like vanguard , big data center , get cloud ? starting point ? traditional tech stack heavily virtualized . big data platform , monolithic application . 'm talking monolith . 1 million line code . monolith 30 million , 40 million , 50 million line code . apaas running on-prem emerging portfolio microservices . following design guideline security first , commensurate heavily regulated asset manager , built account , dpcs security apparatus entailed 150 security control . security place , wanted start moving workload cloud . started web apps , microservices . moved apaas , thought fastest way start getting workload cloud . time , established secure internet connectivity using route 53 dns , aws 's web application firewall cloudfront cdn . also migrated vpn access direct connect improved resiliency bandwidth facility . wanted shut rapidly growing on-prem big data platform . became heavy user s3 emr . machine learning capability comprehend , lex , sagemaker , transcribe glue introduced . aws security service implemented . use secret manager authentication credential . use macie discovering protecting sensitive information . use shield ddos protection . knew get data closer microservices . still reaching back on-prem data center data . using cdc technology along aurora , allowed u move data similar schema on-prem relational database . microservices solution delivery team wanted access data key value structure . introduced dynamo . using kinesis data streaming lambda event-driven data transformation , began moving dynamodb . put u position eliminate cloud-based data cache . next huge design decision focused apaas . pivoted ec fargate . mentioned earlier , werner 's remark , got stronger container isolation , got security box , got integration key service , especially identity access management , importantly , guy paying aws bill , got pure consumption model . hooked ec fargate dynamo aurora . starting drain microservices apaas . accelerating pace monolithic composition allow u retire apaas near future . finally , started move gold copy bounded context function data cloud . recently , strategically decided host emerging advisory platform ec fargate . platform support advice service increasingly demand client . werner vogelsso 's end state , 100 % cloud native architecture . vanguard get ? know reduce cost compute least 30 % . know build software 30 % faster . know deploy capability 20x faster . lead better ability innovate . along way , get improved resiliency . since 1973 , vanguard disrupting investor pursue financial security . today mark 17th time vanguard stage somewhere : invent . i'd like thank aws opportunity . 'd like thank vanguard cloud construction team making possible . 'd like thank investor entrust u asset . enjoy financial security . thank . thanks , jeffrey . 's really cool hear customer faithful vanguard , especially seeing benefit 're getting platform . one thing , think back talked nitro , think sort general concept . fact aws amazon well . aws , especially , always think evolvable architecture . mean often start building architecture , keeping mind , might software running year two year . especially scale , like within aws , make sure , example , order magnitude , almost revisit architecture built . think probably , 's better example s3 , -- sort first real service delivered everyone . remember designing s3 , number object board thought would storing first six month . heck , added 2 order magnitude . blew first month , yes ? meant -- certainly meant keep good eye architecture . last year , mai-lan stage talk sort s3 evolved time . started 8 microservices . last year mai-lan stage , holding 53 microservices s3 . 262 , yes ? example , new capability 've heard , example , s3 access point , first launched andy 's keynote , 's new microservice . s3 replication time control 8 microservices . access analyzer s3 another 4 5 microservices . show 're able evolve system we've taken really good care thinking would evolvable architecture . one thing 'm always proud s3 one core principle s3 reliability , mostly , always like say , everything fails time , yes ? mostly , think hardware , think disk , really high failure rate . network controller weird thing . bit ï¬‚ips memory . 's thing happen scale need able prepared . 's even hardware , even thinking sort like black swan event like bug catching -- one component . 're always thinking reduce impact -- thing fail , reduce impact customer . call blast radius . we're always thinking reduce blast radius . 've talked last year -- last year , also , peter vosshall gave great talk cell-based architecture . let quickly revisit , yes ? would regional architecture , something spends multiple az , cell- based version would sort big -- smaller component , blast radius potential failure limited cell . also , zonal architecture , something life 1 zone time different zone , also actually make use cell-based architecture approach . always case want reduce blast radius . exactly pick size cell , smaller cell . really reduce blast radius , 's easy test easy operate . larger cell , 're cost-eï¬ƒcient reduce split . also see whole system easier operate . question always really nicely partition system , actually make use cell-based architecture . , think zonal-based service aws , probably eb really good example . let 's take look kind thing 've done eb really reduce blast radius route , yes ? think eb block store service . n't think something disk attached , right ? really case multiple shard actually make volume . course , replicate , yes ? address another set shard actually replication . control type failure shard , configuration master , yes ? configuration master , sits actually second network . second network sort overï¬‚ow network , big provisioned front end network ec2 eb . configuration master sits . configuration master nothing . actually , thing shard would fail node would fail , sort restarts - - trigger re-replication . 's actually pretty simple one , yes ? something fails , fails backup start re-replicating new set shard . , configuration master n't terribly much . multiple thing fail time , thing get easily overloaded especially 're talking 1 disk . 're talking 1 volume . talking million million million volume . 1 configuration master , configuration master actually becomes single point failure easily get overwhelmed . thinking sort improve ? always , always tension consistency availability . cap theorem say world partition , yes , end consistency availability . consistency eb nonnegotiable . need make sure environment actually ensure high availability consistency . make sure consistency never get traded . , cell- based architecture come back , yes ? apply eb , eb master , would maybe start reforming zone split zone 2 maybe split 4. every time reduce blast radius impact failure overload configuration master . 're thinking , 're thinking actually smallest unit cell actually achieve eb . , especially configuration master . dawned u actually , eb unique case configuration master well , data need available client . remember , essence , old style database world , meant 1 database , need accessible client . 's case 's client , ec2 instance eb volume actually need access particular configuration data . instead sort splitting 4 , went million tiny database ensure blast radius eb small possible . physalia , actually come -- lesson world , portuguese man-of-war . look like jelly fish , essence , consists hundred thousand really small microorganism colony together present 1 thing . 's name come . look sort data model , volume get created , get partition key database physalia manages 1 partition key . , create colony micro cell , cell support 1 partition key . really mean end million million cell . 's okay . 're small simple manage . cell life environment node . actually , inside cell , 7 node , run paxos actually able distinguished proposal master . 7 cell paxos state machine reliable . one thing 've able physalia well make sure cell always close client possible database really tied . often happens client move throughout az get -- volume get attached different server , thing like . physalia , 're able make sure configuration master life close cell possible , client possible , , reducing blast radius . look sort impact physalia , physalia . sort error rate -- aggregate error rate accessing configuration master pre-physalia world . always , see , happens , 's actually pretty spectacular . , cell-based architecture play important role . particular case , 've able go cell cell small 1 single key , , significantly reducing blast radius potential impact failure . think sort cell-based architecture one thing , 's technique 've learned time amazon think cool . 's , especially application either stateless soft state , kind thing , right ? client actually involved story well . think sort regional architecture . used card -- deck card representing different customer dice , given 're vega . diamond one actually start -- fails , 's introducing enormous workload push something hard bug triggered . regional architecture . might take first node , course , immediately retry . , take everything whole region . cell-based architecture , yes , basically , map -- map customer onto particular cell . , scenario happens , yes , happens 2 node cell get taken . okay , good . particular case , 25 % customer affected . would take club -- , ? yes . 's club . -- , go something completely different . 's called shuï¬ „ e sharding . basically , number node . -- actually take client twice actually take random hash randomly spread different shard , diamond actually introducing failure , see actually another customer -- share cell affected , mean basically , -- look math behind , 's basically combinatorial . particular case , 8 node shard size 2 , yes , failure rate impact particular failure 3.6 % customer . 's small set . imagine improve 100 shard size 5 see 1 client almost impact client . end grows , combination grow . really make use math actually really build highly reliable system really minimize blast radius failure system . mean smart client actually know retries thing like . rest , think math really build real . , building distributed system hard , yes ? 've always done . 've done amazon past 20 , 25 year scale unparalleled . -- many always asking u , guy ? mean , 25 year , must lot experience building sebastien de halleuxthese kind system . amazon sort build resilience ? amazon engineer scale ? kind lesson learned managing operation . 've thinking . 've gotten best engineer architect together , 've given talk past year . 'm happy announce today amazon builder ' library actually bring information build highly reliable system , like amazon . 're launching 15 article sort different area . example , implement health check . best practice around . -- history amazon , kind thing 've learned . hope help build distributed system scale reliability amazon aws . think 're charting unchartered territory , yes ? -- next customer one really charting new territory . saildrone exciting start-up creates wind solar powered autonomous surface vehicle . 're making use sort technology charge everything sea . 'd like invite ceo saildrone , sebastien de halleux actually come talk . sebastien ? ocean unbelievably vast , covering 70 % planet . act powerful engine driving complex planetary system affect humanity . yet , ocean data scarce standard . 's ocean incredibly vast , also unforgiving , dangerous environment . land , grown accustomed billion connected sensor . sea , hundred , principally mooring . imagine large steel buoy tethered ocean ï¬‚oor 4-mile long cable weighted set train wheel , dangerous deploy expensive maintain . course , satellite providing big picture past 25 year . measure variable low resolution see water . know better . , 've using robot study distant world solar system . 's time start quantifying planet fix measure -- prepare n't know . set saildrone . breakthrough started 10 year ago , pursuing land-sailing speed record . march 26 , 2009 , founder , richard jenkins , broke record mojave desert , 126.2 mile per hour wind- powered car called greenbird mark v. record still standing . -- thank . birth saildrone . core record innovative wing tail arrangement similar provides lift airplane . tilted 90 degree . solution 's capable producing immense forward propulsion long period time . consumes le 3 watt electrical power , le refrigerator light bulb . saildrone carry suite sensor measure atmospheric oceanographic variable incredible precision , thing like wind speed direction , air temperature , pressure , barometric pressure , humidity , solar radiation ; also water , water temperature , salinity , dissolved oxygen , dissolved carbon dioxide , atmospheric carbon dioxide , underwater sound , current profile , biomass , bathymetry 1,000 meter . 'm talking powerhouse data collection . course , 1 saildrone . global ï¬‚eet saildrone . incredible planetary infrastructure , naturally , powered aws . saildrone endurance resiliency . robot working around clock , achieving mission duration 12 month . werner 's talk resiliency exact reason chose aws cloud provider , partner massively scale . also provide industrial-strength resiliency . aws delivered , enabling u provide mission-critical data , real-time , around-the- clock global customer base without skipping beat . 's example resiliency critical . better fish stock data important manage fishery . information affect million job globally millennium growing catch , 1996 peak fishery , catch ï¬‚at , indicating severe overfishing ocean . manage resource measure ? mission estimate biomass various fish stock , pollock , sardine , mackerel . saildrone using sonar , device emits sound , sound wave listens echo back fish seabed . painting ocean sound , develop large statistical model biomass , significant area . ï¬‚eets saildrones fish migrate . faster count , better estimate . 's ï¬‚eet saildrone work bering chukchi sea u.s. arctic , home 1/3 commercial catch . closer home , work every year along west coast united state vancouver island canada , way mexican border . truly groundbreaking work autonomous vehicle . surface , onboard camera busy accruing large data set tag image , come think image net ocean data set power first machine learning algorithm optimized maritime domain awareness , place everything always moving every frame , complex problem . , course , still work-in-progress ocean keep surprising u . algorithm encounter novel scene like drone-riding seal , hard tag . earlier year , saildrone successfully completed first ever unmanned autonomous circumnavigation antarctica . 've seen deep race hard go around track . went around antarctica , 196 day nonstop new zealand new zealand . data mission quantified key role , thank , southern ocean play regulating planet 's carbon dioxide , key driver climate change . achieve speed , relied serious data crunching aws navigate waypoint waypoint . first , ingest numerical model describing change pressure system , turn drive various wind pattern different direction , something inï¬‚uences trajectory drone pretty dramatic way . surface , track current , adding around swirling , slower progress , course , wave 60-foot large wave , different wave height , different period , act many obstacle slow progress literally destroy vehicle . see , zoom onto drone , see navigation logic actually quite complex , navigating multiple field optimal manner . task accomplished seamlessly cluster aws compute sending resulting instruction vehicle via satellite . longer-term vision one called quantified planet . 's 1 saildrone . 're dividing entire global ocean 1,000 sub domain , 6x6 degree size . 're working deploy drone box . goal achieve planetary coverage thereby help deliver better insight planetary system affect humanity . system , like weather , modeled numerically aws using new instance type like p3 c5n instead old supercomputer . combining aws compute saildrone 's unprecedented institute data , deliver new insight global precipitation , example , global wind monitoring hurricane , storm typhoon . course , long-term monitoring heat ï¬‚uxes tropical pacific , famous el niãƒâ±o . delivery -- near real time . compute , package deliver insight hand user globally saildrone forecast app . 's next ? next frontier mapping global seabed . hard may believe , 85 % global seabed remains unmapped unexplored . hard work solve data collection problem . big problem need big solution . built ultimate machine task . 'm proud present saildrone surveyor , 72-foot long wind-powered vehicle carrying 1 ton sonar system capable imaging bottom sea 8,000 meter . 's 24,000 foot . together partner , aim complete mission within next 10 year , creating first complete map earth benefit humanity . 's werner vogelstrue planetary endeavor . involves unprecedented scope data set . like much work , 's really made possible collaboration aws help store process amazing set critical data . 're excited see future hold explore new realm new possibility saildrone . look forward continuing strengthening amazing partnership aws . thank . thank . big part , course , weather prediction ï¬‚uid dynamic . want see treat aws supercomputer , rewatch peter desantis ' presentation monday night , really explains make use ec2 instance build supercomputer . 'm going take little bit different track looking bit -- big industry kind stuff 've seen -- seen happening . especially world manufacturing . industry 1.0 -- course , end 1800s steam machine came action . saw whole industrial revolution started take place gin cart starting invented . look sort industry 1.0 , moving 2.0 electricity get introduced , becomes big source power . see -- start see major shift manufacturing process well . first -- first assembly line built state . whereas 3.0 electronics start arrive factory ï¬‚oors start sort controlled pcls thing like . next phase know day called industry 4.0 automation start taking place . everything becomes automated . especially , also thing like logistics everything else around . -- really industry 4.0 ? n't really believe much . look 2015 , average age equipment factory 22 year . never old since 1935. factory equipment really old able produce data want get create insight . n't think 4.0 yet factory manufacturing site need change significantly really want start creating insight world , yes ? look different piece still really big deal manufacturing site , data helping create insight . data need start ï¬‚owing manufacturing site place actually analytics . want create insight , 's lot insight . mean , look , example , predictive maintenance autonomous transportation , wearable , collaborative robot , kind thing , eye , industry 4.0 . 's hardly manufacturing already pace . today , factory already producing 1,800 petabyte data year . 's small fraction needed really create insight world . whether manufacturer whether smart city -- actually start moving data cloud , actually multilayers approach whether want thing actually , . want go actually start thinking transportation , company match -- make smarter decision computation . , example , move level city go even . yes , go think sort kind thing around agriculture . world actually grows . expectation 2050 , 35 % people world need fed . way transportation , right ? multiple layer sort collecting data could -- data need grow together create new insight . think think sort bring back amazon operates , think back sort physical part amazon.com . 's fulfillment center . early day , sold book . 3 million book available amazon started . course , fulfillment challenging . logistical challenge . 's actually relatively simple . however , need start selling tv toothpaste pillow shoe coffee , thing become lot complex , yes ? plan really . early day , looked like worked like normal warehouse would look like . definitely longer case . aimed really sort create better delivery . moved 1 moment $ 25 free shipping 2-day shipping . 1-day shipping . use prime , get within hour . thing change , still need improve worker safety make sure guarantee speed would like ? course , , typical warehouse , 's 4 million bin 10 million item . use computer vision throughout system . set 's called manhattan grid style , part bitsy pod . kiva system actually follow . bring towards worker put thing box together . make sure actually , 2 item 've ordered , go box together . , use machine learning actually predict thing , yes ? 's definitely 4 different area , yes ? 's forecasting , product buying ? buy ? -- large manufacturer , mom pop shop ? question , place ? -- place , kind promise give customer term delivery ? actually pretty challenging , yes ? actually , 's popular product , something seasonal like warm sock sun hat summer , 's easy . 's coffee thing like . easy thing predict actually sold across world . need -- nicolas cage reversible sequin pillow cover . well one , 's harder predict would actually place one . -- , make use machine learning look thousand thousand similar item start making prediction buy . 's vega , want pillow , probably get coming two day . 's machine learning play increasingly important role . look many thing 've done amazon past 20 , 25 year , machine learning probably basis . small stuff like ( fender ) lead detection fault detection kind thing happening behind cover . also major innovation , like alexa , yes , drone scout , driven machine learning , probably extreme one know amazon go store . could walk , take thing shelf , put bag walk get charged . there's enough challenge , yes ? first figure account account moving store . see unmarked cdv presentation see turning yellow . mean actually know certain count , counting 's actually moving . challenge computer vision actually product . product . 're crumbled , yes , product actually really almost identical . 're different product . also people actually interacting store ? 've invested lot generating synthetic information actually start making algorithm eï¬ƒcient accurate . result , scan walk store walk get charged . look sort outside aws , outside amazon , 's many cool thing happening physical world actually powered aws . let's take look . yes , first , sort workplace safety . one favorite example customer went path improve quality operation safety . woodside . liquid natural gas producer australia actually significant operation . one part producing liquid nitrogen -- natural lpg , whatever , actually freeze 160 degree 0. happens massive refrigerator . one thing old world , would sensor , thing sensor would alarm something went wrong . n't ability produce data . woodside moved system actually producing data actually - - 's process part , 's failure part 's called foaming would -- sort alarm go . whole factory would shut maybe even week . 's pretty hazardous environment . happens sensor 's 10,000 sensor refrigerator , actually -- actually start predict foaming longer create hazardous condition customer . -- -- first experiment . , ï¬‚ipped switch brought 200,000 sensor online actually started create autonomous environment worker . environment extremely hazardous . one hand , autonomous platform sea . 's worker , 's robot . particular case , see robot actually moving throughout plant , extremely hazardous plant , without danger worker . worker sit centralized environment , actually see robot also seeing . box see popping iot sensor run aws iot core . 're able actually take action sort controlled thing need -- happen , instead send people big hazardous suit work . modjoul another interesting company . make wearable device improve workplace safety , like safety belt glove thing like , track worker move hazardous environment . 's one interesting story told one major u.s. airline actually use safety belt measure far people actually bending , far worker bending , like whether actually use right technique pick thing ground really improve worker health . united rental moving create massive machinery completely autonomous nobody longer need work massive machinery hazardous environment . another area really interesting -- digital sort physical world combination way city made smarter . 's lot work going particular world . thing , interesting example . shotspotter measure gun activity city . apparently , every gun-related homicide , 100 gunfight -- 100 gunshot accident never reported . make use multiple sensor really able accurately within 60 second , able actually identify location gunshot send -- law enforcement actually take care . city miami taken -- 2014. since , homicide dropped 35 % miami . city virginia beach put sensor ocean start measuring predicting ï¬‚oods going happen . martin hofmannmiovision , actually put sensor around street optimize transportation . lot interesting sort physical digital world agriculture . 's lot work going developing finding new way feed future . 's 2 interesting customer space . one climate corporation . actually make use digital -- whole digital architecture , 's called climate fieldview make use sensoring tractor equipment on-site well satellite imagery help farmer optimize yield . farmer business network interesting one farmer sharing anonymously information yield field kind crop growing . 's actually collective bargaining seed provider well setting price crop selling . go world transportation , whether siemens putting sensor around world train track biggest cause delay often bending rail thing like . measure . deutsche bahn , big german transportation provider , putting -- also sensor train accurately measure delay thing like . vantage power interesting customer sensor electric bus . preventive maintenance battery bus . think sort coming back talked earlier , really modernization manufacturing . creating data stream manufacturing actually really optimize insight . talk , really interesting next speaker . ceo innovation award ceo magazine year . talk modernization manufacturing group cio volkswagen , dr. martin hofmann . hi . martin hofmann volkswagen . volkswagen started beetle . today , group 12 iconic automotive brand . brand portfolio vw , audi , porsche , bentley , bugatti , lamborghini , seat , skoda , ducati motorcycle , man scania truck . 365 model portfolio . want drive different model every day , 's going take year pure fun joy , promise . produce 11 million vehicle per year , 44,000 day . mention number ? massive scale requirement supply chain global basis run eï¬ƒcient effective way . supply chain highly complex global . 1,500 supplier globally . produce manufacture every day 200 million component part . component part shipped global factory . 18,000 truck per day shipping component factory , 7,700 ship ocean , crossing ocean produced vehicle . year , 's 75 million cubic meter material process . 122 factory worldwide : 5 north america ; 9 brazil argentina ; 71 europe ; 4 south africa ; 33 china india . factory running different grown technology different age . 's hard scale standpoint . together aws , 're lifting 122 factory cloud . one common global architecture building aws . entire project call volkswagen industrial cloud , right , probably biggest iot project manufacturing world . chose aws technology . ability scale , provide u standard factory . implementation speed getting aws methodology , ï¬‚exibility culture helping u really accelerate project . way build , center , built aws cloud , call digital production platform . aws cloud platform , connect machine , robot , press shop , print shop , body shop , assembly machine , logistics system , get connected cloud run heavy lifting ai machine learning algorithm , iot service security control constantly optimize compute situation factory . , top aws cloud , put call volkswagen group app store . develop use case-based application factory . develop copy paste factory . download cloud , application like predictive maintenance , algorithm manage optimize factory function . digital production platform . , take extend outside world , mean integrating connecting supplier cloud , 're integrating logistics company , equipment manufacturer . business partner connected industrial cloud . 're even open open automotive manufacturer use application technology industrial cloud . also invited contribute load software cloud , like open source ecosystem . going one biggest ecosystem built industry . architecture behind , ca n't go detail know better . 4 major building block 're using architecture . one ot , operation technology , gateway , connecting machine , robot werner vogelscloud . 's edge gateway lot function workload run close machine . 're using outpost , 2 outpost per factory several application run on-prem 're using outpost plant cloud . fourth element dpp enterprise cloud . application framework , highly standardized , 'll able quickly , higher speed , develop application production system keep cloud . let show something . ( presentation ) happens . shop ï¬‚oor . aws cloud get married machine , robot , welding system imagine running factory . thousand sensor constantly sending data aws cloud , digital production platform . algorithm , machine learning algorithm constantly optimize setting factory parameter machine . also run application employee based cloud better manage factory system . werner mentioned earlier talk , transformationally , manufacturing go way beyond automation . 's full integration data point factory . volkswagen industrial cloud foundation new production strategy . future , autonomous factory , dark room factory start direction . 'll also reduce factory cost . define standard plant . increase production program fulfillment . mean delivering vehicle time customer . product launch much faster . come market earlier new vehicle . number , 's 30 % increase productivity . decrease factory cost 30 % . targeting eur 1 billion saving supply chain . incredible journey aws partner . thank much . fortunate past year travel world meet many customer . 's always interesting see 's certain group customer , younger business trying solve really hard human problem . whether around education , whether around health , working hard tackling hardest human problem moment . example , aquabyte company bergen -- 's bergen norway . 're working create protein . , protein likely become major food source future . , grow salmon . bin like , easily 200,000 salmon . 's interesting see allowed u come on-site actually video . started tv series called go build . 's 8 episode . deal world 's hardest problem , young business really tackling hard problem collaboration aws . around food . one favorite . first episode . company called hara token jakarta . problem indonesia many farmer , small farm holder identity . , get loan buy seed farm . go loan shark , indonesia often charge 60 % . giving farmer identity identity , also measure size plot land yield plot land , 're able get farmer identity data take bank . bank eager actually give farmer loan repaying rate almost 100 % . , company really tackling really hard human problem . one episode bit fun . 's episode released today , episode amsterdam . ( presentation ) episode 'll -- 've released last week rio de janeiro . 's health care . find new way providing health care poorest people brazil . even though brazil national health service , capable actually keeping need brazilian especially poor brazilian . urge go check . inspirational story young business running aws , solving world 's hardest problem . well , hope see guy tonight . fun party go build .